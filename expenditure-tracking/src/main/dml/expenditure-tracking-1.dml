package pt.ist.expenditureTrackingSystem.domain;


enum pt.ist.expenditureTrackingSystem.domain.acquisitions.AcquisitionItemClassification as AcquisitionItemClassification;
enum pt.ist.expenditureTrackingSystem.domain.acquisitions.AcquisitionProcessStateType as AcquisitionProcessStateType;
enum pt.ist.expenditureTrackingSystem.domain.acquisitions.RefundProcessStateType as RefundProcessStateType;
enum pt.ist.expenditureTrackingSystem.domain.acquisitions.StandardAcquisitionProcessStateType as StandardAcquisitionProcessStateType;
enum pt.ist.expenditureTrackingSystem.domain.acquisitions.afterthefact.AfterTheFactAcquisitionType as AfterTheFactAcquisitionType;
enum pt.ist.expenditureTrackingSystem.domain.announcements.AnnouncementProcessStateType as AnnouncementProcessStateType;
enum pt.ist.expenditureTrackingSystem.domain.authorizations.AuthorizationType as AuthorizationType;
enum pt.ist.expenditureTrackingSystem.domain.RoleType as ExpendituresRoleType;
enum pt.ist.expenditureTrackingSystem.domain.authorizations.AuthorizationOperation as AuthorizationOperation;
enum pt.ist.expenditureTrackingSystem.domain.acquisitions.simplified.SimplifiedProcedureProcess.ProcessClassification as ProcessClassification;
enum pt.ist.expenditureTrackingSystem.domain.acquisitions.search.SearchProcessValues as SearchProcessValues;
enum pt.ist.expenditureTrackingSystem.domain.acquisitions.AcquisitionInvoiceState as AcquisitionInvoiceState;
enum pt.ist.expenditureTrackingSystem.domain.acquisitions.consultation.JuryMemberRole as JuryMemberRole;
enum pt.ist.expenditureTrackingSystem.domain.acquisitions.consultation.MultipleSupplierConsultationProcessState as MultipleSupplierConsultationProcessState;
enum pt.ist.expenditureTrackingSystem.domain.acquisitions.PaymentMethod as AcquisitionPaymentMethod;

valueType java.math.BigDecimal as AcquisitionsBigDecimal {
    externalizeWith {
        String toString();
    }
}

valueType pt.ist.expenditureTrackingSystem.domain.acquisitions.search.SearchProcessValuesArray as SearchProcessValuesArray {
    externalizeWith {
        String exportAsString();
    }

    internalizeWith importFromString();
}


class ExpenditureTrackingSystem {
	Integer acquisitionRequestDocumentCounter;
	SearchProcessValuesArray searchProcessValuesArray;
	String acquisitionCreationWizardJsp;
	String institutionalProcessNumberPrefix;
	String institutionalRequestDocumentPrefix;
	Boolean invoiceAllowedToStartAcquisitionProcess;
	Boolean requireFundAllocationPriorToAcquisitionRequest;
	Boolean registerDiaryNumbersAndTransactionNumbers;
	Boolean requireCommitmentNumber;
	Money maxValueStartedWithInvoive;
	Money valueRequireingTopLevelAuthorization;
	String documentationUrl;
	String documentationLabel;
	Boolean checkSupplierLimitsByCPV;
	String institutionManagementEmail;
	Boolean processesNeedToBeReverified;
	LocalizedString approvalTextForRapidAcquisitions;
	String createSupplierUrl;
	String createSupplierLabel;
	Boolean priorConsultationAvailable;
	Boolean forceRefundAssociationToMissions;
	LocalizedString acquisitionsUnit;
	Boolean allowedAdvancePayments;
	LocalizedString advancePaymentDocumentRecipient;
}

class ContractType {
    LocalizedString name;
}


class acquisitions.Acquisition {
}

	class acquisitions.RequestWithPayment extends acquisitions.Acquisition {
	
	}
	
	class acquisitions.refund.RefundRequest extends acquisitions.RequestWithPayment {
		String paymentReference;
	} 
	
	class acquisitions.afterthefact.AcquisitionAfterTheFact extends acquisitions.Acquisition {
		AfterTheFactAcquisitionType afterTheFactAcquisitionType;
		Money value;
		AcquisitionsBigDecimal vatValue;
		String description;
		Boolean deletedState;
		AcquisitionItemClassification classification;
	}

	class acquisitions.AcquisitionRequest extends acquisitions.RequestWithPayment {
		String paymentReference;
		String contractSimpleDescription;
	}

class acquisitions.refund.RefundItemNature {
    LocalizedString type;
    Boolean shouldAllocateFundsToSupplier;
}

class acquisitions.CPVReference {
	String code;
	String description;
}

class announcements.Announcement {
	String description;
	Money totalPrice;
	DateTime creationDate;
	Boolean active;
}

	class announcements.CCPAnnouncement extends announcements.Announcement {
		Integer executionDays;
		String executionAddress;
		String choiceCriteria;
	}

	class announcements.RCISTAnnouncement extends announcements.Announcement {
	}

class acquisitions.PaymentProcessYear {
	Integer year;
	Integer counter;
	Integer invoiceCounter;
}

class acquisitions.RequestItem {
	String description;
	AcquisitionItemClassification classification;
}
 
	class acquisitions.refund.RefundItem extends acquisitions.RequestItem {
		Money valueEstimation;
		Boolean itemNotExecuted;
	}

	class acquisitions.AcquisitionRequestItem extends acquisitions.RequestItem {
		Integer quantity;
		Money unitValue;
		AcquisitionsBigDecimal vatValue;
		Money additionalCostValue;
		String proposalReference;
		String recipient;
		String recipientPhone;
		String recipientEmail;
		Address address;
	
		Integer realQuantity;
		AcquisitionsBigDecimal realVatValue;
		Money realUnitValue;
		Money realAdditionalCostValue;
		Boolean researchAndDevelopmentPurpose;
	}

class acquisitions.UnitItem {
	Boolean submitedForFundsAllocation;
	Boolean itemAuthorized;
	Boolean invoiceConfirmed;
	Money shareValue;
	Money realShareValue;
}

class acquisitions.Financer {
	String fundAllocationId;
	Strings effectiveFundAllocationId;
	Strings paymentDiaryNumber;
	Strings transactionNumber;
	String commitmentNumber;
}

	class acquisitions.ProjectFinancer extends acquisitions.Financer {
		String projectFundAllocationId;
		Strings effectiveProjectFundAllocationId;
	}

class authorizations.Authorization {
	AuthorizationType authorizationType;
	Boolean canDelegate;
	LocalDate startDate;
	LocalDate endDate;
	Money maxAmount;
	
}	

	class authorizations.DelegatedAuthorization extends authorizations.Authorization {
	}

class authorizations.AuthorizationLog {
	DateTime whenOperationWasRan;
	AuthorizationOperation authorizationOperation;
	AuthorizationType authorizationType;
	Boolean canDelegate;
	LocalDate startDate;
	LocalDate endDate;
	Money maxAmount;
	String justification;
}	

class acquisitions.PurchaseOrderAdditionalInformationTemplate {
    LocalizedString additionalInformation;
}

class acquisitions.afterthefact.ImportFile extends .org.fenixedu.bennu.io.domain.GenericFile {
	Boolean active;
}
	
class acquisitions.AcquisitionProposalDocument extends .module.workflow.domain.ProcessFile {
	String proposalId;
}

class acquisitions.CreditNoteDocument extends .module.workflow.domain.ProcessFile {
}
	
class acquisitions.PurchaseOrderDocument extends .module.workflow.domain.ProcessFile {
	String requestId;
}
	
class acquisitions.Invoice extends .module.workflow.domain.ProcessFile {
	String invoiceNumber;
	LocalDate invoiceDate;
	String localInvoiceNumber;
}
	
	class acquisitions.afterthefact.AfterTheFactInvoice extends acquisitions.Invoice {
	}
	
	class acquisitions.PaymentProcessInvoice extends acquisitions.Invoice {
	}
	
		class acquisitions.AcquisitionInvoice extends acquisitions.PaymentProcessInvoice {
			String confirmationReport;
			AcquisitionInvoiceState state;
			String paymentDocumentNumber;
			String paymentDocumentDate;
			String payedValue;
			Boolean advancePaymentInvoice;
		}
	
		class acquisitions.refund.RefundableInvoiceFile extends acquisitions.PaymentProcessInvoice {
			Money value;
			AcquisitionsBigDecimal vatValue;
			Money refundableValue;
		}

class acquisitions.AdvancePaymentDocument extends .module.workflow.domain.ProcessFile {
}

class acquisitions.AdvancePaymentRequest {
	AcquisitionPaymentMethod paymentMethod;
    AcquisitionsBigDecimal percentage;
    String acquisitionJustification;
    String entityJustification;
}

class acquisitions.AdvancePaymentDocumentTemplate {
	LocalizedString type;
    LocalizedString subject;
    Boolean partialValue;
    Boolean needAcquisitionJustification;
    Boolean needEntityJustification;
}

class acquisitions.Payment {
	String reference;
	Money value;
	Money additionalValue;
	LocalDate date;
	String description;
	String compensationNumber;
}
	
class Options {
	Boolean displayAuthorizationPending;
	Boolean recurseAuthorizationPendingUnits;
	Boolean receiveNotificationsByEmail;
}

class organization.AccountingUnit {
	String name;
}

class organization.Person {
}

class SavedSearch {
	String searchName;
	SearchProcessValues searchProcessValues;
	String processId;
	Boolean pendingOperations;
	Boolean showOnlyResponsabilities;
	String requestDocumentId;
	AcquisitionProcessStateType acquisitionProcessStateType;
    RefundProcessStateType refundProcessStateType;
 	String proposalId;
 	Boolean showOnlyAcquisitionsExcludedFromSupplierLimit;
    Boolean showOnlyAcquisitionsWithAdditionalCosts;
    String refundeeName;
	Boolean showOnlyWithUnreadComments;
	Boolean showPriorityOnly;
	Boolean showOnlyAdvancePayments;
}

	class MyOwnProcessesSearch extends SavedSearch {
	}

	class PendingProcessesSearch extends SavedSearch {
	}

class organization.DeliveryInfo {
	String recipient;
	Address address;
	String phone;
	String email;
}

class organization.Supplier extends .module.finance.domain.Supplier {
}

class organization.Unit {
	Boolean defaultRegeimIsCCP;
}

	class organization.CostCenter extends organization.Unit {
	}

	class organization.Project extends organization.Unit {
	}

	class organization.SubProject extends organization.Unit {
		Boolean serviceProvisionProject;
	}

class announcements.OperationLog extends .module.workflow.domain.ActivityLog {
	AnnouncementProcessStateType state;
}

class acquisitions.AcquisitionApprovalTerm {
	DateTime date;
	LocalizedString approvalMessage;
}

class processes.GenericProcess extends .module.workflow.domain.WorkflowProcess {
}

	class acquisitions.PaymentProcess extends processes.GenericProcess {
		Integer acquisitionProcessNumber;	
		Boolean skipSupplierFundAllocation;
	}

	class acquisitions.AcquisitionProcess extends acquisitions.PaymentProcess {
		LocalDate fundAllocationExpirationDate;
	}

		class acquisitions.afterthefact.AfterTheFactAcquisitionProcess extends acquisitions.AcquisitionProcess {
		}

			class acquisitions.RegularAcquisitionProcess extends acquisitions.AcquisitionProcess {
				Boolean processNeedsReverification;
			}
			
			class acquisitions.simplified.SimplifiedProcedureProcess extends acquisitions.RegularAcquisitionProcess {
				ProcessClassification processClassification;
				String financialProcessId;
			}

			class acquisitions.standard.StandardProcedureProcess extends acquisitions.RegularAcquisitionProcess {
			}

	class announcements.AnnouncementProcess extends processes.GenericProcess {
	}

	class acquisitions.refund.RefundProcess extends acquisitions.PaymentProcess {
		Boolean underCCPRegime;
		Boolean rapid;
	}

class acquisitions.consultation.MultipleSupplierConsultationProcess extends .module.workflow.domain.WorkflowProcess {
    MultipleSupplierConsultationProcessState state;
}

class acquisitions.consultation.MultipleSupplierConsultation {
    String description;
    String justification;
    String priceJustification;
    String priceLimitJustification;
    Money lowPriceLimit;
    String lowPriceLimitJustification;
    String lowPriceLimitCriteria;
    Integer contractDuration;
    String supplierCountJustification;
    Integer proposalDeadline;
    Integer proposalValidity;
    AcquisitionsBigDecimal collateral;
    Integer numberOfAlternativeProposals;
    String fundCommitmentNumber;
    Boolean negotiation;
    Boolean specificEvaluationMethod;
    String evaluationMethodJustification;
    String expenseProcessIdentification;
    String acquisitionRequestNumber;
    String acquisitionProcessIdentification;
}

class acquisitions.consultation.MultipleSupplierConsultationPart {
    Integer number;
    String description;
    Money value;
    Money adjudicatedValue;
    Boolean researchAndDevelopmentPurpose;
}

class acquisitions.consultation.MultipleSupplierConsultationPartYearExecution {
    Integer year;
    Money value;
}

class acquisitions.consultation.MultipleSupplierConsultationFinancer {
    AcquisitionsBigDecimal percentage;
    Boolean approved;
    String fundReservation;
    String fundAllocation;
}

class acquisitions.consultation.MultipleSupplierConsultationJuryMember {
    JuryMemberRole juryMemberRole;
}

class acquisitions.consultation.TieBreakCriteria {
    Integer criteriaOrder;
    String description;
}


class acquisitions.consultation.document.SupplierCriteriaSelectionDocument extends .module.workflow.domain.ProcessFile {
}

class acquisitions.consultation.document.TechnicalSpecificationDocument extends .module.workflow.domain.ProcessFile {
}

class acquisitions.consultation.document.ManagementDocument extends .module.workflow.domain.ProcessFile {
}

    // Minuta do contrato (sujeito a assinatura pelo "Conselho de Gestão"
    class acquisitions.consultation.document.DraftContract extends acquisitions.consultation.document.ManagementDocument {
    }

    // Decisão de contratar (sujeito a assinatura pelo "Conselho de Gestão")
    class acquisitions.consultation.document.DecisionAgreement extends acquisitions.consultation.document.ManagementDocument {
    }

    // Peças do procedimento (Caderno de encargos e Convite apresentação de propostas) (sujeito a assinatura pelo "Conselho de Gestão")
    class acquisitions.consultation.document.ProcedureDocuments extends acquisitions.consultation.document.ManagementDocument {
    }

    // Proposta de Adjudicação (sujeito a assinatura pelo "Conselho de Gestão")
    class acquisitions.consultation.document.ProcurementProposal extends acquisitions.consultation.document.ManagementDocument {
    }

    // Notificação de Adjudicação (sujeito a assinatura pelo "Conselho de Gestão"
    class acquisitions.consultation.document.NoticeOfIntent extends acquisitions.consultation.document.ManagementDocument {
    }

class acquisitions.consultation.document.JuryDocument extends .module.workflow.domain.ProcessFile {
}

    // Relatório Preliminar (sujeito a assinatura pelos membros do Júri)
    class acquisitions.consultation.document.PreliminaryReport extends acquisitions.consultation.document.JuryDocument {
    }

    // Relatório Final (sujeito a assinatura pelos membros do Júri)
    class acquisitions.consultation.document.FinalReport extends acquisitions.consultation.document.JuryDocument {
    }


// Contrato (sujeito a assinatura pelo "Presidente")
class acquisitions.consultation.document.Contract extends .module.workflow.domain.ProcessFile {
}

// Nota de encomenda (sujeito a assinatura pela coordenadora do NCA)
class acquisitions.consultation.document.PurchaseOrder extends .module.workflow.domain.ProcessFile {
}

// Fatura (sujeito a assinatura do gestor do contrato)
class acquisitions.consultation.document.Invoice extends .module.workflow.domain.ProcessFile {
}

// Relatório de Formação de Contrato e Relatório de Execução de contrato
class acquisitions.consultation.document.ExternalPlatformReportDocument extends .module.workflow.domain.ProcessFile {
}

class acquisitions.consultation.document.SupplierCandidacyDocument extends .module.workflow.domain.ProcessFile {
}

    // Propostas
    class acquisitions.consultation.document.SupplierCandidacyProposalDocument extends acquisitions.consultation.document.SupplierCandidacyDocument {
    }

    // Documentos de habilitação
    class acquisitions.consultation.document.SupplierCandidacyCurriculumDocument extends acquisitions.consultation.document.SupplierCandidacyDocument {
    }


class acquisitions.refund.Refundee {
	String name;
	String fiscalCode;
} 
	
class ProcessState {
	DateTime whenDateTime;
	String justification;
}
	
	class acquisitions.AcquisitionProcessState extends ProcessState {
		AcquisitionProcessStateType acquisitionProcessStateType;
	}

	class announcement.AnnouncementProcessState extends ProcessState {
		AnnouncementProcessStateType announcementProcessStateType;
	}

	class acquisitions.RefundProcessState extends ProcessState {
		RefundProcessStateType refundProcessStateType;
	}


class DashBoard {
	Strings column1;
	Strings column2;
	Strings column3;
}


class acquisitions.AcquisitionInvoiceItem {
    Integer quantity;
    Money unitValue;
    AcquisitionsBigDecimal vatValue;
    Money additionalCostValue;
}


relation ExpenditureTrackingSystemDashBoard {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	DashBoard playsRole dashBoards {
		multiplicity *;
	}
}

relation PersonDashBoard {
	organization.Person playsRole person;
	DashBoard playsRole dashBoard;
}

relation ExpenditureTrackingSystemGenericProcess {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	processes.GenericProcess playsRole processes {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemAcquisition {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	acquisitions.Acquisition playsRole acquisitions {
		multiplicity *;
	}
}

relation AcquisitionProcessAcquisitionRequest {
	acquisitions.AcquisitionProcess playsRole acquisitionProcess;
	acquisitions.AcquisitionRequest playsRole acquisitionRequest;
}


relation AnnouncementProcessAnnouncement {
	announcements.AnnouncementProcess playsRole announcementProcess;
	announcements.CCPAnnouncement playsRole announcement;
}

relation ExpenditureTrackingSystemAcquisitionRequestItem {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	acquisitions.RequestItem playsRole requestItems {
		multiplicity *;
	}
}

relation AcquisitionRequestAcquisitionRequestItem {
	acquisitions.RequestWithPayment playsRole request;
	acquisitions.RequestItem playsRole requestItems {
		multiplicity *;
	}
}

relation PaymentProcessInvoiceRequestItem {
	acquisitions.PaymentProcessInvoice playsRole invoicesFiles {
		multiplicity *;
	}
	acquisitions.RequestItem playsRole requestItems {
		multiplicity *;
	}
}

relation PaymentProcessInvoiceUnitItem {
	acquisitions.PaymentProcessInvoice playsRole confirmedInvoices {
		multiplicity *;
	}
	acquisitions.UnitItem playsRole unitItems {
		multiplicity *;
	}
}

relation FundsAllocatedPermanentlyForFinancer {
	acquisitions.PaymentProcessInvoice playsRole allocatedInvoices {
		multiplicity *;
	}
	acquisitions.Financer playsRole financers {
		multiplicity *;
	}
}

relation FundsAllocatedPermanentlyForProjectFinancer {
	acquisitions.PaymentProcessInvoice playsRole allocatedInvoicesInProject {
		multiplicity *;
	}
	acquisitions.ProjectFinancer playsRole projectFinancers {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemPerson {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	organization.Person playsRole people {
		multiplicity *;
	}
}

relation MyOrgExpenditureTrackingSystemPerson {
	.org.fenixedu.bennu.core.domain.Bennu playsRole bennu;
	organization.Person playsRole peopleFromExpenditureTackingSystem {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemUnit {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	organization.Unit playsRole units {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemTopLevelUnits {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystemFromTopLevelUnit;
	organization.Unit playsRole topLevelUnits {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemAuthorization {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	authorizations.Authorization playsRole authorizations {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemAuthorizationLog {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	authorizations.AuthorizationLog playsRole authorizationLogs {
		multiplicity *;
	}
}

relation UnitAuthorization {
	organization.Unit playsRole unit;
	authorizations.Authorization playsRole authorizations {
		multiplicity *;
	}
}

relation PersonAuthorization {
	organization.Person playsRole person;
	authorizations.Authorization playsRole authorizations {
		multiplicity *;
	}
}

relation PersonAuthorizationLog {
	organization.Person playsRole person;
	authorizations.AuthorizationLog playsRole authorizationLogs {
		multiplicity *;
	}
}

relation WhoAuthorizationLog {
	organization.Person playsRole who;
	authorizations.AuthorizationLog playsRole authorizationLogsForWho {
		multiplicity *;
	}
}

relation UnitAuthorizationLog {
	organization.Unit playsRole unit;
	authorizations.AuthorizationLog playsRole authorizationLogs {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemOptions {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	Options playsRole options {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemSuppliers {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	organization.Supplier playsRole suppliers {
		multiplicity *;
	}
}

relation MyOrgSuppliers {
	.org.fenixedu.bennu.core.domain.Bennu playsRole bennu;
	organization.Supplier playsRole suppliers {
		multiplicity *;
	}
}

relation PersonOptions {
	organization.Person playsRole person;
	Options playsRole options;
}

relation AcquisitionRequestSupplier {
	acquisitions.AcquisitionRequest playsRole possibleAcquisitionRequests {
		multiplicity *;
	}
	organization.Supplier playsRole suppliers {
		multiplicity *;
	}
}

relation AcquisitionRequestSelectedSupplier {
	acquisitions.AcquisitionRequest playsRole acquisitionRequests {
		multiplicity *;
	}
	organization.Supplier playsRole selectedSupplier;
}

relation AcquisitionRequestRequester {
	organization.Person playsRole requester;
	acquisitions.RequestWithPayment  playsRole requestsWithyPayment {
		multiplicity *;
	}
}

relation AcquisitionRequestRefundee {
	organization.Person playsRole refundee;
	acquisitions.AcquisitionRequest playsRole refundedAcquisitionRequests {
		multiplicity *;
	}
}

relation ProcessStatePerson {
	organization.Person playsRole who;
	ProcessState playsRole processStates {
		multiplicity *;
	}
}

relation GenericProcessProcessState {
	processes.GenericProcess playsRole process;
	ProcessState playsRole processStates {
		multiplicity *;
	}
}

relation GenericProcessCurrentProcessState {
	processes.GenericProcess playsRole;
	ProcessState playsRole currentProcessState;
}

relation ExpenditureTrackingSystemProcessState {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	ProcessState playsRole processStates {
		multiplicity *;
	}
}

relation AcquisitionRequestRequestingUnit {
	acquisitions.RequestWithPayment playsRole requests {
		multiplicity *;
	}
	organization.Unit playsRole requestingUnit;
}

relation RequestFinancer {
	acquisitions.RequestWithPayment playsRole fundedRequest;
	acquisitions.Financer playsRole financers {
		multiplicity *;
	}
}

relation UnitItemFinancer {
	acquisitions.Financer playsRole financer;
	acquisitions.UnitItem playsRole unitItems {
		multiplicity *;
	}
}

relation UnitFinancer {
	acquisitions.Financer playsRole financedItems{
		multiplicity *;
	}
	organization.Unit playsRole unit;
}

relation AccountingUnitFinancer {
	acquisitions.Financer playsRole financers{
		multiplicity *;
	}
	organization.AccountingUnit playsRole accountingUnit;
}

relation ItemUnitItem {
	acquisitions.RequestItem playsRole item;
	acquisitions.UnitItem playsRole unitItems {
		multiplicity *;
	}
}

relation PersonDeliveryInfo {
	organization.Person playsRole person;
	organization.DeliveryInfo playsRole deliveryInfos {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemFinancer {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	acquisitions.Financer playsRole financers {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemDeliveryInfo {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	organization.DeliveryInfo playsRole deliveryInfos {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemCPVReference {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	acquisitions.CPVReference playsRole cPVReferences {
		multiplicity *;
	}
}

relation MyOrgCPVReference {
	.org.fenixedu.bennu.core.domain.Bennu playsRole bennu;
	acquisitions.CPVReference playsRole cPVReferences {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemPriorityCPVReference {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystemForPriorities;
	acquisitions.CPVReference playsRole priorityCPVReferences {
		multiplicity *;
	}
}


relation AcquisitionRequestItemCPVReference {
	acquisitions.CPVReference playsRole cPVReference;
	acquisitions.RequestItem playsRole acquisitionItems {
		multiplicity *;
	}
}

relation DelegatedAuthorizationAuthorization {
	authorizations.DelegatedAuthorization playsRole delegatedAuthorizations {
		multiplicity *;
	}	
	authorizations.Authorization playsRole authorization; 
}
relation AfterTheFactAcquisitionProcessAcquisitionAfterTheFact {
	acquisitions.afterthefact.AfterTheFactAcquisitionProcess playsRole afterTheFactAcquisitionProcess;
	acquisitions.afterthefact.AcquisitionAfterTheFact playsRole acquisitionAfterTheFact;
}

relation AcquisitionAfterTheFactSupplier {
	acquisitions.afterthefact.AcquisitionAfterTheFact playsRole acquisitionsAfterTheFact {
		multiplicity *;
	}
	organization.Supplier playsRole supplier;
}

relation AcquisitionAfterTheFactCpvReference {
	acquisitions.afterthefact.AcquisitionAfterTheFact playsRole acquisitionsAfterTheFact {
		multiplicity *;
	}
	acquisitions.CPVReference playsRole cpvReference;
}

relation ExpenditureTrackingSystemAnnouncement {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	announcements.Announcement playsRole announcements {
		multiplicity *;
	}
}

relation AnnoucementBuyingUnit {
	organization.Unit playsRole buyingUnit;
	announcements.CCPAnnouncement playsRole buyAnnouncements {
		multiplicity *;
	}
}

relation AnnoucementRequestingUnit {
	organization.Unit playsRole requestingUnit;
	announcements.CCPAnnouncement playsRole requestAnnouncements {
		multiplicity *;
	}
}

relation AnnouncementSupplier {
	announcements.CCPAnnouncement playsRole announcements {
		multiplicity *;
	}
	organization.Supplier playsRole supplier;
}

relation AnnouncementPublisher {
	organization.Person playsRole publisher;
	announcements.CCPAnnouncement playsRole announcements {
		multiplicity *;
	}
}

relation AnnouncementAcquisition {
	announcements.Announcement playsRole announcement;
	acquisitions.Acquisition playsRole acquisition;
}

relation ExpenditureTrackingSystemPaymentProcessYear {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	acquisitions.PaymentProcessYear playsRole paymentProcessYears {
		multiplicity *;
	}
}

relation PaymentProcessPaymentProcessYear {
	acquisitions.PaymentProcess playsRole paymentProcess {
		multiplicity *;
	} 
	acquisitions.PaymentProcessYear playsRole paymentProcessYear;
}

relation ExpenditureTrackingSystemAccountingUnit {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	organization.AccountingUnit playsRole accountingUnits {
		multiplicity *;
	}
}

relation PersonAccountingUnit {
	organization.Person playsRole people {
		multiplicity *;
	}
	organization.AccountingUnit playsRole accountingUnits {
		multiplicity *;
	}
}

relation ResponsibleAccountingUnit {
	organization.Person playsRole responsiblePeople {
		multiplicity *;
	}
	organization.AccountingUnit playsRole responsibleAccountingUnits {
		multiplicity *;
	}
}

relation PersonProjectAccountingUnit {
	organization.Person playsRole projectAccountants {
		multiplicity *;
	}
	organization.AccountingUnit playsRole projectAccountingUnits {
		multiplicity *;
	}
}

relation ResponsibleProjectAccountingUnit {
	organization.Person playsRole responsibleProjectAccountants {
		multiplicity *;
	}
	organization.AccountingUnit playsRole responsibleProjectAccountingUnits {
		multiplicity *;
	}
}

relation PersonTreasuryAccountingUnit {
	organization.Person playsRole treasuryMembers {
		multiplicity *;
	}
	organization.AccountingUnit playsRole treasuryAccountingUnits {
		multiplicity *;
	}
}

relation UnitAccountingUnit {
	organization.Unit playsRole units {
		multiplicity *;
	}
	organization.AccountingUnit playsRole accountingUnit;
}

relation AfterTheFactImportFile {
	acquisitions.afterthefact.AfterTheFactAcquisitionProcess playsRole afterTheFactAcquisitionProcesses {
		multiplicity *;
	}
	acquisitions.afterthefact.ImportFile playsRole importFile;
}

relation RefundableInvoiceFileSupplier {
	acquisitions.refund.RefundableInvoiceFile playsRole refundInvoices {
		multiplicity *;
	}
	organization.Supplier playsRole supplier;
}

relation RefundRequestRefundProcess {
	acquisitions.refund.RefundRequest playsRole request;
	acquisitions.refund.RefundProcess  playsRole process;
}

relation RefundeeExpenditureTrackingSystem {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	acquisitions.refund.Refundee playsRole refundees {
		multiplicity *;
	}
}

relation RefundRequestRefundee {
	acquisitions.refund.RefundRequest playsRole refundRequests {
		multiplicity *;
	}
	acquisitions.refund.Refundee playsRole refundee;
}

relation PersonRefundee {
	organization.Person playsRole person;
	acquisitions.refund.Refundee playsRole refundee;
}

relation PersonSavedSearch {
	organization.Person playsRole person;
	SavedSearch playsRole saveSearches {
		multiplicity *;
	}
}

relation RequestorSavedSearch {
	organization.Person playsRole requestor;
	SavedSearch playsRole requestorSearches {
		multiplicity *;
	}
}

relation TakerSavedSearch {
	organization.Person playsRole takenBy;
	SavedSearch playsRole takenSearches {
		multiplicity *;
	}
}

relation CPVReferenceSavedSearch {
	acquisitions.CPVReference playsRole cpvReference;
	SavedSearch playsRole savedSearch {
		multiplicity *;
	}
}

relation AccountManagerSavedSearch {
	organization.Person playsRole accountManager;
	SavedSearch playsRole accountManagerSearches {
		multiplicity *;
	}
}

relation AccountingUnitSavedSearch {
	organization.AccountingUnit playsRole accountingUnit;
	SavedSearch playsRole accountingUnitsSearches {
		multiplicity *;
	}
}

relation requestingUnitSavedSearch {
	organization.Unit playsRole unit;
	SavedSearch playsRole unitSearches {
		multiplicity *;
	}
}

relation payingUnitSavedSearch {
	organization.Unit playsRole payingUnit;
	SavedSearch playsRole payingUnitSearches {
		multiplicity *;
	}
}

relation PaymentProcessYearSavedSearch {
	acquisitions.PaymentProcessYear playsRole year;
	SavedSearch playsRole yearSearches {
		multiplicity *;
	}
}

relation SavedSearchExpenditureTrackingSystem {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	SavedSearch playsRole savedSearches {
		multiplicity *;
	}
}

relation SupplierSavedSearch {
	organization.Supplier playsRole supplier;
	SavedSearch playsRole supplierSearches {
		multiplicity *;
	}
}

relation PersonDefaultSavedSearch {
	SavedSearch playsRole defaultSearch;
	organization.Person playsRole people {
		multiplicity *;
	}
}

relation SystemSearchesExpenditureTrackingSystem {
	SavedSearch playsRole systemSearches {
		multiplicity *;
	}
	ExpenditureTrackingSystem playsRole expenditureTrackingSystemForSystemSearch;
}

relation UnitObservers {
	organization.Unit playsRole observableUnits {
		multiplicity *;
	}
	organization.Person playsRole observers {
		multiplicity *;
	}
}

relation UnitAccountManager {
	organization.Unit playsRole unitForAccountManager {
		multiplicity *;
	}
	organization.Person playsRole accountManager;
}

relation ExpenditureTrackingSystemOrganizationalAccountabilityType {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystemFromOrganizationalAccountabilityType {
		multiplicity *;
	}
	.module.organization.domain.AccountabilityType playsRole organizationalAccountabilityType;
}

relation ExpenditureTrackingSystemOrganizationalMissionAccountabilityType {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystemFromOrganizationalMissionAccountabilityType {
		multiplicity *;
	}
	.module.organization.domain.AccountabilityType playsRole organizationalMissionAccountabilityType;
}

relation ExpenditureTrackingSystemUnitPartyType {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystemFromUnitPartyType {
		multiplicity *;
	}
	.module.organization.domain.PartyType playsRole unitPartyType;
}

relation ExpenditureTrackingSystemCostCenterPartyType {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystemFromCostCenterPartyType {
		multiplicity *;
	}
	.module.organization.domain.PartyType playsRole costCenterPartyType;
}

relation ExpenditureTrackingSystemProjectPartyType {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystemFromProjectPartyType {
		multiplicity *;
	}
	.module.organization.domain.PartyType playsRole projectPartyType;
}

relation ExpenditureTrackingSystemSubProjectPartyType {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystemFromSubProjectPartyType {
		multiplicity *;
	}
	.module.organization.domain.PartyType playsRole subProjectPartyType;
}

class acquisitions.Material {
	String materialSapId;
	String description;
	String type;
	String measurementUnit;
}

relation MaterialCPV {
	acquisitions.Material playsRole material {
		multiplicity *;
	}
	acquisitions.CPVReference playsRole materialCpv {
		multiplicity 1;
	}
}

relation acquisitionsRequestItemMaterials {
	acquisitions.RequestItem playsRole acquisitionRequestItem {
		multiplicity *;
	}
	acquisitions.Material playsRole material {
		multiplicity 1;
	}
}

relation ExpenditureTrackingSystemMaterials {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	acquisitions.Material playsRole materials {
		multiplicity *;
	}
}

relation AcquisitionInvoiceAcquisitionInvoiceItem {
    acquisitions.AcquisitionInvoice playsRole invoice {
        multiplicity 1..1;
    }
    acquisitions.AcquisitionInvoiceItem playsRole item {
        multiplicity *;
    }
}

relation PaymentProcessYearMultipleSupplierConsultationProcess {
    acquisitions.PaymentProcessYear playsRole year {
        multiplicity 1..1;
    }
    acquisitions.consultation.MultipleSupplierConsultationProcess playsRole consultationProcess {
        multiplicity *;
    }
}

relation AcquisitionRequestItemAcquisitionInvoiceItem {
    acquisitions.AcquisitionInvoiceItem playsRole invoice {
        multiplicity *;
    }
    acquisitions.AcquisitionRequestItem playsRole item {
        multiplicity 1..1;
    }
}

relation ExpenditureTrackingSystemPurchaseOrderSender {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	.org.fenixedu.messaging.core.domain.Sender playsRole purchaseOrderSender{
		multiplicity 0..1;
	}
}

relation RefundItemRefundItemNature {
    acquisitions.refund.RefundItem playsRole refundItem {
        multiplicity *;
    }
    acquisitions.refund.RefundItemNature playsRole refundItemNature {
        multiplicity 0..1;
    }
}

relation ExpenditureTrackingSystemRefundItemNature {
    ExpenditureTrackingSystem playsRole expenditureTrackingSystem {
        multiplicity 1..1;
    }
    acquisitions.refund.RefundItemNature playsRole refundItemNature {
        multiplicity *;
    }
}

relation MultipleSupplierConsultationProcessMultipleSupplierConsultation {
    acquisitions.consultation.MultipleSupplierConsultationProcess playsRole process {
        multiplicity 1..1;
    }
    acquisitions.consultation.MultipleSupplierConsultation playsRole consultation {
        multiplicity 1..1;
    }
}

relation MultipleSupplierConsultationProcessUser {
    acquisitions.consultation.MultipleSupplierConsultationProcess playsRole process {
        multiplicity *;
    }
    .org.fenixedu.bennu.core.domain.User playsRole creator {
        multiplicity 1..1;
    }
}

relation MaterialMultipleSupplierConsultation {
    acquisitions.Material playsRole material {
        multiplicity 1..1;
    }
    acquisitions.consultation.MultipleSupplierConsultation playsRole consultation {
        multiplicity *;
    }
}

relation ExpenditureTrackingSystemContractType {
    ExpenditureTrackingSystem playsRole expenditureTrackingSystem {
        multiplicity 1..1;
    }
    ContractType playsRole contractType {
        multiplicity *;
    }
}

relation ContractTypeMultipleSupplierConsultation {
    ContractType playsRole contractType {
        multiplicity 1..1;
    }
    acquisitions.consultation.MultipleSupplierConsultation playsRole consultation {
        multiplicity *;
    }
}

relation MultipleSupplierConsultationMultipleSupplierConsultationPart {
    acquisitions.consultation.MultipleSupplierConsultation playsRole consultation {
        multiplicity 1..1;
    }
    acquisitions.consultation.MultipleSupplierConsultationPart playsRole part {
        multiplicity *;
    }
}

relation MaterialMultipleSupplierConsultationPart {
    acquisitions.Material playsRole material {
        multiplicity 1..1;
    }
    acquisitions.consultation.MultipleSupplierConsultationPart playsRole multipleSupplierConsultationPart {
        multiplicity *;
    }
}

relation MultipleSupplierConsultationFinancerUnit {
    organization.Unit playsRole unit {
        multiplicity 1..1;
    }
    acquisitions.consultation.MultipleSupplierConsultationFinancer playsRole multipleSupplierConsultationFinancer {
        multiplicity *;
    }
}

relation MultipleSupplierConsultationFinancerMultipleSupplierConsultation {
    acquisitions.consultation.MultipleSupplierConsultation playsRole consultation {
        multiplicity 1..1;
    }
    acquisitions.consultation.MultipleSupplierConsultationFinancer playsRole financer {
        multiplicity *;
    }
}

relation MultipleSupplierConsultationMultipleSupplierConsultationJuryMember {
    acquisitions.consultation.MultipleSupplierConsultation playsRole consultation {
        multiplicity 1..1;
    }
    acquisitions.consultation.MultipleSupplierConsultationJuryMember playsRole juryMember {
        multiplicity *;
    }
}

relation UserMultipleSupplierConsultationJuryMember {
    .org.fenixedu.bennu.core.domain.User playsRole user {
        multiplicity 1..1;
    }
    acquisitions.consultation.MultipleSupplierConsultationJuryMember playsRole multipleSupplierConsultationJuryMember {
        multiplicity *;
    }
}

relation RefundItemSupplier {
    acquisitions.refund.RefundItem playsRole refundItem {
        multiplicity *;
    }
    organization.Supplier playsRole supplier {
        multiplicity 0..1;
    }
}

relation MultipleSupplierConsultationPresidentSubstitute {
    acquisitions.consultation.MultipleSupplierConsultation playsRole consultationFromPresidentSubstitute;
    acquisitions.consultation.MultipleSupplierConsultationJuryMember playsRole presidentSubstitute;
}

relation UserMultipleSupplierConsultationFromContractManager {
    .org.fenixedu.bennu.core.domain.User playsRole contractManager;
    acquisitions.consultation.MultipleSupplierConsultation playsRole multipleSupplierConsultationFromContractManager {
        multiplicity *;
    }
}

relation UserMultipleSupplierConsultationFromContractSecretary {
    .org.fenixedu.bennu.core.domain.User playsRole contractSecretary;
    acquisitions.consultation.MultipleSupplierConsultation playsRole multipleSupplierConsultationFromContractSecretary {
        multiplicity *;
    }
}

relation MultipleSupplierConsultationSupplier {
    organization.Supplier playsRole supplier {
        multiplicity *;
    }
    acquisitions.consultation.MultipleSupplierConsultation playsRole multipleSupplierConsultation {
        multiplicity *;
    }
}

relation MultipleSupplierConsultationTieBreakCriteria {
    acquisitions.consultation.MultipleSupplierConsultation playsRole consultation {
        multiplicity 1..1;
    }
    acquisitions.consultation.TieBreakCriteria playsRole tieBreakCriteria {
        multiplicity *;
    }
}

relation MultipleSupplierConsultationPartSupplier {
    organization.Supplier playsRole supplier {
        multiplicity 0..1;
    }
    acquisitions.consultation.MultipleSupplierConsultationPart playsRole multipleSupplierConsultationPart {
        multiplicity *;
    }
}

relation MultipleSupplierConsultationPartMultipleSupplierConsultationPartYearExecution {
    acquisitions.consultation.MultipleSupplierConsultationPart playsRole part {
        multiplicity 1..1;
    }
    acquisitions.consultation.MultipleSupplierConsultationPartYearExecution playsRole yearExecution {
        multiplicity *;
    }
}

relation SupplierSupplierCandidacyDocument {
    organization.Supplier playsRole supplier {
        multiplicity 1..1;
    }
    acquisitions.consultation.document.SupplierCandidacyDocument playsRole supplierCandidacyDocument {
        multiplicity *;
    }
}


relation RegularAcquisitionProcessApprovalTerm{
    acquisitions.RegularAcquisitionProcess playsRole process {
        multiplicity 1..1;
    }
    acquisitions.AcquisitionApprovalTerm playsRole acquisitionApprovalTerm {
        multiplicity *;
    }
}

relation PersonAcquisitionApprovalTerm{
	organization.Person playsRole approver {
        multiplicity 1..1;
    }
    acquisitions.AcquisitionApprovalTerm playsRole acquisitionApprovalTerm {
        multiplicity *;
    }
}

relation ExpenditureTrackingSystemPurchaseOrderNoteTemplate {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	acquisitions.PurchaseOrderAdditionalInformationTemplate playsRole purchaseOrderAdditionalInformationTemplate {
		multiplicity *;
	}
}

relation PaymentRequestWithPayment {
	acquisitions.RequestWithPayment playsRole requestWithPayment;
	acquisitions.Payment playsRole payment {
		multiplicity *;
	}
}

relation ExpenditureTrackingSystemAdvancePaymentDocumentTemplate {
	ExpenditureTrackingSystem playsRole expenditureTrackingSystem;
	acquisitions.AdvancePaymentDocumentTemplate playsRole advancePaymentDocumentTemplate {
		multiplicity *;
	}
}

relation AdvancePaymentRequestAdvancePaymentDocumentTemplate {
	acquisitions.AdvancePaymentRequest  playsRole advancePaymentRequest {
		multiplicity *;
	}
	acquisitions.AdvancePaymentDocumentTemplate playsRole advancePaymentDocumentTemplate {
        multiplicity 1..1;
    }
}

relation AdvancePaymentRequestRequestWithPayment {
	acquisitions.AdvancePaymentRequest  playsRole advancePaymentRequest;
	acquisitions.RequestWithPayment playsRole requestWithPayment {
        multiplicity 1..1;
    }
}
